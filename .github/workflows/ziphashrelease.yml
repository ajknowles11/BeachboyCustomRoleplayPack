# This is a basic workflow to help you get started with Actions

name: Zip and hash release

# Controls when the workflow will run
on:
  push:
    branches: [ "main" ]

  workflow_dispatch:

jobs:
  release:
    permissions: write-all
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout code
        uses: actions/checkout@v3

      # Runs a set of commands using the runners shell
      - name: Zip folder
        run: |
          rm -rf ../${{ github.event.repository.name }}.zip
          zip -r ../${{ github.event.repository.name }}.zip ./*

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with: 
          tag_name: ${{ github.run_number }}
          release_name: ${{ github.run_number }}

      - name: Upload zip to release
        uses: actions/upload-release-asset@v1
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with: 
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ../${{ github.event.repository.name }}.zip
          asset_name: ${{ github.event.repository.name }}.zip
          asset_content_type: application/zip

      - name: Update hash on server
        run: | 
          ftp -in ${{ secrets.SERVER_IP }} <<EOF
          user "${{ secrets.SERVER_USER }}" "${{ secrets.SERVER_PASSWORD }}"
          get server.properties ../server.properties
          quit
          EOF
          python3 sethash.py ../server.properties `sha1sum ../${{ github.event.repository.name }}.zip | cut -d " " -f 1`
          ftp -in ${{ secrets.SERVER_IP }} <<EOF
          user "${{ secrets.SERVER_USER }}" "${{ secrets.SERVER_PASSWORD }}"
          put ../server.properties server.properties
          quit
          EOF
          
